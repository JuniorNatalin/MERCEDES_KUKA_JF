&ACCESS RVO
&REL 44
&COMMENT dai_tool_check
&USER PKL_AST
&PARAM DISKPATH = H_Prog
&PARAM version = 0.1
DEF dai_grp_XX_ok( )
;FOLD INI
  ;FOLD BASISTECH INI
    GLOBAL INTERRUPT DECL 3 WHEN $STOPMESS==TRUE DO IR_STOPM ( )
    BAS (#INITMOV,0 )
  ;ENDFOLD (BASISTECH INI)
;FOLD SPOTTECH INI
USERSPOT(#INIT)
;ENDFOLD (SPOTTECH INI)
;FOLD GRIPPERTECH INI
USER_GRP(0,DUMMY,DUMMY,GDEFAULT)
;ENDFOLD (GRIPPERTECH INI)
;FOLD USER INI

;Make your modifications here
;FOLD COLLISION_V_3.01 INI ;%{E}
    IF (COLLISION_DATA[1].I_NR>0) THEN
    GLOBAL INTERRUPT DECL 21 WHEN $IN[COLLISION_DATA[1].I_NR]==FALSE DO COLLSTOP (1,0 )
    ENDIF
    IF (COLLISION_DATA[2].I_NR>0) THEN
    GLOBAL INTERRUPT DECL 22 WHEN $IN[COLLISION_DATA[2].I_NR]==FALSE DO COLLSTOP (2,0 )
    ENDIF
    IF (COLLISION_DATA[3].I_NR>0) THEN
    GLOBAL INTERRUPT DECL 23 WHEN $IN[COLLISION_DATA[3].I_NR]==FALSE DO COLLSTOP (3,0 )
    ENDIF
    IF (COLLISION_DATA[4].I_NR>0) THEN
    GLOBAL INTERRUPT DECL 24 WHEN $IN[COLLISION_DATA[4].I_NR]==FALSE DO COLLSTOP (4,0 )
    ENDIF
;ENDFOLD (Collision)

;ENDFOLD (USER INI)

;ENDFOLD (INI)
       
;FOLD ; machine identifier:;%{PE}%R 8.2.11,%MKUKATPBASIS,%CCOMMENT,%VNORMAL,%P 2:machine identifier:
;ENDFOLD
;FOLD ; station-nr.:;%{PE}%R 5.4.33,%MKUKATPBASIS,%CCOMMENT,%VNORMAL,%P 2:station-nr.:     
;ENDFOLD
;FOLD ; version:;%{PE}%R 8.2.11,%MKUKATPBASIS,%CCOMMENT,%VNORMAL,%P 2:version:
;ENDFOLD
;FOLD ; name arranger:;%{PE}%R 5.4.33,%MKUKATPBASIS,%CCOMMENT,%VNORMAL,%P 2:name arranger:
;ENDFOLD
  
 
;only in template, remove after teaching
wait for false


REPEAT
  MSG_SHOW("DAI_H_Prog",#quit,999,"dai_grp_ok_0")
UNTIL $T1 == TRUE

; ***************************************
; A T T E N T I O N !!! Only drive in $T1
; ***************************************
  
MSG_BTN("OK")
MSG_SHOW("DAI_H_Prog",#dialog,999,"dai_grp_ok_1")

;FOLD robot_ok-program
MSG_SHOW("DAI_H_Prog",#quit,999,"dai_grp_ok_2")
dai_robot_ok ( )
;ENDFOLD

MSG_BTN("OK")
MSG_SHOW("DAI_H_Prog",#dialog,999,"dai_grp_ok_3")

;FOLD PTP HOME Vel=100 % DEFAULT;%{PE}%R 5.5.24,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:DEFAULT
$BWDSTART=FALSE
PDAT_ACT=PDEFAULT
FDAT_ACT=FHOME
BAS(#PTP_PARAMS,100)
$H_POS=XHOME
PTP XHOME 
;ENDFOLD

; Teach PTP-Way to first controllposition [Tool 64]

;FOLD PTP LHP005 Vel=100 % PDAT005 Tool[64]:NULL Base[64]:NULL CD;%{PE}%R 8.2.17,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:LHP005, 3:, 5:100, 7:PDAT005
$BWDSTART=FALSE
PDAT_ACT=PPDAT005
FDAT_ACT=FLHP005
BAS(#PTP_PARAMS,100)
TQM_FIFO_READ(TM1)
TRIGGER WHEN DISTANCE=0 DELAY=0 DO iTQM_TRIGGERID=1
TRIGGER WHEN DISTANCE=0 DELAY=0 DO TQM_START_MON(TM1) PRIO = -1
TRIGGER WHEN DISTANCE=1 DELAY=0 DO TQM_SWAP_VALUES(TM1) PRIO = -1
PTP XLHP005 
;ENDFOLD
;FOLD PTP LHP010 Vel=100 % PDAT010 Tool[64]:NULL Base[64]:NULL CD;%{PE}%R 8.2.17,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:LHP010, 3:, 5:100, 7:PDAT010
$BWDSTART=FALSE
PDAT_ACT=PPDAT010
FDAT_ACT=FLHP010
BAS(#PTP_PARAMS,100)
TQM_FIFO_READ(TM2)
TRIGGER WHEN DISTANCE=0 DELAY=0 DO iTQM_TRIGGERID=2
TRIGGER WHEN DISTANCE=0 DELAY=0 DO TQM_START_MON(TM2) PRIO = -1
TRIGGER WHEN DISTANCE=1 DELAY=0 DO TQM_SWAP_VALUES(TM2) PRIO = -1
PTP XLHP010 
;ENDFOLD

; 1. Controlling Position;
;FOLD LIN CONTROLL1 Vel=2 m/s CPDAT10 Tool[64]:NULL Base[64]:NULL CD;%{PE}%R 8.2.17,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:CONTROLL1, 3:, 5:2, 7:CPDAT10
$BWDSTART=FALSE
LDAT_ACT=LCPDAT10
FDAT_ACT=FCONTROLL1
BAS(#CP_PARAMS,2)
TQM_FIFO_READ(TM3)
TRIGGER WHEN DISTANCE=0 DELAY=0 DO iTQM_TRIGGERID=3
TRIGGER WHEN DISTANCE=0 DELAY=0 DO TQM_START_MON(TM3) PRIO = -1
TRIGGER WHEN DISTANCE=1 DELAY=0 DO TQM_SWAP_VALUES(TM3) PRIO = -1
LIN XCONTROLL1 
;ENDFOLD
MSG_BTN("OK")
MSG_SHOW("DAI_H_PROG",#dialog,999,"dai_grp_ok_4")
WAIT FOR  $IN[1026]==TRUE 

; Teach PTP-way back to home
;FOLD LIN LHP015 Vel=2 m/s CPDAT015 Tool[1] Base[64]:NULL CD;%{PE}%R 8.2.17,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:LHP015, 3:, 5:2, 7:CPDAT015
$BWDSTART=FALSE
LDAT_ACT=LCPDAT015
FDAT_ACT=FLHP015
BAS(#CP_PARAMS,2)
TQM_FIFO_READ(TM4)
TRIGGER WHEN DISTANCE=0 DELAY=0 DO iTQM_TRIGGERID=4
TRIGGER WHEN DISTANCE=0 DELAY=0 DO TQM_START_MON(TM4) PRIO = -1
TRIGGER WHEN DISTANCE=1 DELAY=0 DO TQM_SWAP_VALUES(TM4) PRIO = -1
LIN XLHP015 
;ENDFOLD
;FOLD PTP LHP020 Vel=100 % PDAT020 Tool[64]:NULL Base[64]:NULL CD;%{PE}%R 8.2.17,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:LHP020, 3:, 5:100, 7:PDAT020
$BWDSTART=FALSE
PDAT_ACT=PPDAT020
FDAT_ACT=FLHP020
BAS(#PTP_PARAMS,100)
TQM_FIFO_READ(TM5)
TRIGGER WHEN DISTANCE=0 DELAY=0 DO iTQM_TRIGGERID=5
TRIGGER WHEN DISTANCE=0 DELAY=0 DO TQM_START_MON(TM5) PRIO = -1
TRIGGER WHEN DISTANCE=1 DELAY=0 DO TQM_SWAP_VALUES(TM5) PRIO = -1
PTP XLHP020 
;ENDFOLD
;FOLD PTP LHP025 Vel=100 % PDAT025 Tool[64]:NULL Base[64]:NULL CD;%{PE}%R 8.2.17,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:LHP025, 3:, 5:100, 7:PDAT025
$BWDSTART=FALSE
PDAT_ACT=PPDAT025
FDAT_ACT=FLHP025
BAS(#PTP_PARAMS,100)
TQM_FIFO_READ(TM6)
TRIGGER WHEN DISTANCE=0 DELAY=0 DO iTQM_TRIGGERID=6
TRIGGER WHEN DISTANCE=0 DELAY=0 DO TQM_START_MON(TM6) PRIO = -1
TRIGGER WHEN DISTANCE=1 DELAY=0 DO TQM_SWAP_VALUES(TM6) PRIO = -1
PTP XLHP025 
;ENDFOLD


;FOLD PTP HOME Vel=100 % DEFAULT;%{PE}%R 8.2.12,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:DEFAULT
$BWDSTART=FALSE
PDAT_ACT=PDEFAULT
FDAT_ACT=FHOME
BAS(#PTP_PARAMS,100)
$H_POS=XHOME
PTP XHOME 
;ENDFOLD
MSG_BTN("OK")
MSG_SHOW("DAI_H_PROG",#dialog,999,"dai_grp_ok_5")
WAIT FOR  $IN[1026]==TRUE


; Teach PTP-Way to second controllposition [Tool XX]

;FOLD PTP LHP030 Vel=100 % PDAT030 Tool[1] Base[64]:NULL CD;%{PE}%R 8.2.17,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:LHP030, 3:, 5:100, 7:PDAT030
$BWDSTART=FALSE
PDAT_ACT=PPDAT030
FDAT_ACT=FLHP030
BAS(#PTP_PARAMS,100)
TQM_FIFO_READ(TM7)
TRIGGER WHEN DISTANCE=0 DELAY=0 DO iTQM_TRIGGERID=7
TRIGGER WHEN DISTANCE=0 DELAY=0 DO TQM_START_MON(TM7) PRIO = -1
TRIGGER WHEN DISTANCE=1 DELAY=0 DO TQM_SWAP_VALUES(TM7) PRIO = -1
PTP XLHP030 
;ENDFOLD
;FOLD PTP LHP035 Vel=100 % PDAT035 Tool[1] Base[64]:NULL CD;%{PE}%R 8.2.17,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:LHP035, 3:, 5:100, 7:PDAT035
$BWDSTART=FALSE
PDAT_ACT=PPDAT035
FDAT_ACT=FLHP035
BAS(#PTP_PARAMS,100)
TQM_FIFO_READ(TM8)
TRIGGER WHEN DISTANCE=0 DELAY=0 DO iTQM_TRIGGERID=8
TRIGGER WHEN DISTANCE=0 DELAY=0 DO TQM_START_MON(TM8) PRIO = -1
TRIGGER WHEN DISTANCE=1 DELAY=0 DO TQM_SWAP_VALUES(TM8) PRIO = -1
PTP XLHP035 
;ENDFOLD

; 2. Controlling Position;
;FOLD LIN CONTROLL2 Vel=2 m/s CPDAT11 Tool[1] Base[64]:NULL CD;%{PE}%R 8.2.17,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:CONTROLL2, 3:, 5:2, 7:CPDAT11
$BWDSTART=FALSE
LDAT_ACT=LCPDAT11
FDAT_ACT=FCONTROLL2
BAS(#CP_PARAMS,2)
TQM_FIFO_READ(TM9)
TRIGGER WHEN DISTANCE=0 DELAY=0 DO iTQM_TRIGGERID=9
TRIGGER WHEN DISTANCE=0 DELAY=0 DO TQM_START_MON(TM9) PRIO = -1
TRIGGER WHEN DISTANCE=1 DELAY=0 DO TQM_SWAP_VALUES(TM9) PRIO = -1
LIN XCONTROLL2 
;ENDFOLD
MSG_BTN("OK")
MSG_SHOW("DAI_H_PROG",#dialog,999,"dai_grp_ok_6")
WAIT FOR  $IN[1026]==TRUE 

; Teach PTP-way back to home
;FOLD LIN LHP040 Vel=2 m/s CPDAT040 Tool[1] Base[64]:NULL CD;%{PE}%R 8.2.17,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:LHP040, 3:, 5:2, 7:CPDAT040
$BWDSTART=FALSE
LDAT_ACT=LCPDAT040
FDAT_ACT=FLHP040
BAS(#CP_PARAMS,2)
TQM_FIFO_READ(TM10)
TRIGGER WHEN DISTANCE=0 DELAY=0 DO iTQM_TRIGGERID=10
TRIGGER WHEN DISTANCE=0 DELAY=0 DO TQM_START_MON(TM10) PRIO = -1
TRIGGER WHEN DISTANCE=1 DELAY=0 DO TQM_SWAP_VALUES(TM10) PRIO = -1
LIN XLHP040 
;ENDFOLD
;FOLD PTP LHP045 Vel=100 % PDAT045 Tool[1] Base[64]:NULL CD;%{PE}%R 8.2.17,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:LHP045, 3:, 5:100, 7:PDAT045
$BWDSTART=FALSE
PDAT_ACT=PPDAT045
FDAT_ACT=FLHP045
BAS(#PTP_PARAMS,100)
TQM_FIFO_READ(TM11)
TRIGGER WHEN DISTANCE=0 DELAY=0 DO iTQM_TRIGGERID=11
TRIGGER WHEN DISTANCE=0 DELAY=0 DO TQM_START_MON(TM11) PRIO = -1
TRIGGER WHEN DISTANCE=1 DELAY=0 DO TQM_SWAP_VALUES(TM11) PRIO = -1
PTP XLHP045 
;ENDFOLD
;FOLD PTP LHP050 Vel=100 % PDAT050 Tool[1] Base[64]:NULL CD;%{PE}%R 8.2.17,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:LHP050, 3:, 5:100, 7:PDAT050
$BWDSTART=FALSE
PDAT_ACT=PPDAT050
FDAT_ACT=FLHP050
BAS(#PTP_PARAMS,100)
TQM_FIFO_READ(TM12)
TRIGGER WHEN DISTANCE=0 DELAY=0 DO iTQM_TRIGGERID=12
TRIGGER WHEN DISTANCE=0 DELAY=0 DO TQM_START_MON(TM12) PRIO = -1
TRIGGER WHEN DISTANCE=1 DELAY=0 DO TQM_SWAP_VALUES(TM12) PRIO = -1
PTP XLHP050 
;ENDFOLD

;FOLD PTP HOME Vel=100 % DEFAULT;%{PE}%R 8.2.12,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:DEFAULT
$BWDSTART=FALSE
PDAT_ACT=PDEFAULT
FDAT_ACT=FHOME
BAS(#PTP_PARAMS,100)
$H_POS=XHOME
PTP XHOME 
;ENDFOLD

MSG_BTN("OK")
MSG_SHOW("DAI_H_Prog",#dialog,999,"dai_grp_ok_3")


END
