&ACCESS RVO
&REL 10
&COMMENT dai_robot_check
&USER PKL_AST
&PARAM DISKPATH = H_Prog
&PARAM version = 0.1
DEF dai_ldd_xx( )
;FOLD INI
  ;FOLD BASISTECH INI
    GLOBAL INTERRUPT DECL 3 WHEN $STOPMESS==TRUE DO IR_STOPM ( )
    BAS (#INITMOV,0 )
  ;ENDFOLD (BASISTECH INI)
;FOLD SPOTTECH INI
USERSPOT(#INIT)
;ENDFOLD (SPOTTECH INI)
;FOLD GRIPPERTECH INI
USER_GRP(0,DUMMY,DUMMY,GDEFAULT)
;ENDFOLD (GRIPPERTECH INI)
;FOLD USER INI

;Make your modifications here
;FOLD COLLISION_V_3.01 INI ;%{E}
    IF (COLLISION_DATA[1].I_NR>0) THEN
    GLOBAL INTERRUPT DECL 21 WHEN $IN[COLLISION_DATA[1].I_NR]==FALSE DO COLLSTOP (1,0 )
    ENDIF
    IF (COLLISION_DATA[2].I_NR>0) THEN
    GLOBAL INTERRUPT DECL 22 WHEN $IN[COLLISION_DATA[2].I_NR]==FALSE DO COLLSTOP (2,0 )
    ENDIF
    IF (COLLISION_DATA[3].I_NR>0) THEN
    GLOBAL INTERRUPT DECL 23 WHEN $IN[COLLISION_DATA[3].I_NR]==FALSE DO COLLSTOP (3,0 )
    ENDIF
    IF (COLLISION_DATA[4].I_NR>0) THEN
    GLOBAL INTERRUPT DECL 24 WHEN $IN[COLLISION_DATA[4].I_NR]==FALSE DO COLLSTOP (4,0 )
    ENDIF
;ENDFOLD (Collision)

;ENDFOLD (USER INI)

;ENDFOLD (INI)
    
;FOLD ; machine identifier:;%{PE}%R 8.2.11,%MKUKATPBASIS,%CCOMMENT,%VNORMAL,%P 2:machine identifier:
;ENDFOLD
;FOLD ; station-nr.:;%{PE}%R 5.4.33,%MKUKATPBASIS,%CCOMMENT,%VNORMAL,%P 2:station-nr.:     
;ENDFOLD
;FOLD ; version:;%{PE}%R 8.2.11,%MKUKATPBASIS,%CCOMMENT,%VNORMAL,%P 2:version:
;ENDFOLD
;FOLD ; name arranger:;%{PE}%R 5.4.33,%MKUKATPBASIS,%CCOMMENT,%VNORMAL,%P 2:name arranger:
;ENDFOLD

 
;only in template, remove after teaching
wait for false

REPEAT
  MSG_SHOW("DAI_H_Prog",#quit,999,"dai_ldd_0")
UNTIL $T1 == TRUE

; ***************************************
; A T T E N T I O N !!! Only drive in $T1
; ***************************************

;FOLD PTP HOME Vel=100 % DEFAULT;%{PE}%R 5.5.24,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:DEFAULT
$BWDSTART=FALSE
PDAT_ACT=PDEFAULT
FDAT_ACT=FHOME
BAS(#PTP_PARAMS,100)
$H_POS=XHOME
PTP XHOME 
;ENDFOLD

; Teach PTP-Way to pendulum-position
; Teache den Weg zur Pendelposition
;FOLD PTP LHP005 Vel=100 % PDAT005 Tool[0] Base[0] CD;%{PE}%R 8.2.17,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:LHP005, 3:, 5:100, 7:PDAT005
$BWDSTART=FALSE
PDAT_ACT=PPDAT005
FDAT_ACT=FLHP005
BAS(#PTP_PARAMS,100)
TQM_FIFO_READ(TM1)
TRIGGER WHEN DISTANCE=0 DELAY=0 DO iTQM_TRIGGERID=1
TRIGGER WHEN DISTANCE=0 DELAY=0 DO TQM_START_MON(TM1) PRIO = -1
TRIGGER WHEN DISTANCE=1 DELAY=0 DO TQM_SWAP_VALUES(TM1) PRIO = -1
PTP XLHP005 
;ENDFOLD

;FOLD PTP LHP010 Vel=100 % PDAT010 Tool[0] Base[0] CD;%{PE}%R 8.2.17,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:LHP010, 3:, 5:100, 7:PDAT010
$BWDSTART=FALSE
PDAT_ACT=PPDAT010
FDAT_ACT=FLHP010
BAS(#PTP_PARAMS,100)
TQM_FIFO_READ(TM2)
TRIGGER WHEN DISTANCE=0 DELAY=0 DO iTQM_TRIGGERID=2
TRIGGER WHEN DISTANCE=0 DELAY=0 DO TQM_START_MON(TM2) PRIO = -1
TRIGGER WHEN DISTANCE=1 DELAY=0 DO TQM_SWAP_VALUES(TM2) PRIO = -1
PTP XLHP010 
;ENDFOLD

;FOLD PTP LHP015 Vel=100 % PDAT015 Tool[0] Base[0] CD;%{PE}%R 8.2.17,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:LHP015, 3:, 5:100, 7:PDAT015
$BWDSTART=FALSE
PDAT_ACT=PPDAT015
FDAT_ACT=FLHP015
BAS(#PTP_PARAMS,100)
TQM_FIFO_READ(TM3)
TRIGGER WHEN DISTANCE=0 DELAY=0 DO iTQM_TRIGGERID=3
TRIGGER WHEN DISTANCE=0 DELAY=0 DO TQM_START_MON(TM3) PRIO = -1
TRIGGER WHEN DISTANCE=1 DELAY=0 DO TQM_SWAP_VALUES(TM3) PRIO = -1
PTP XLHP015 
;ENDFOLD

 
;-----------------------------
;A1 = 0
;A2 = -90
;A3 = +90 bis +95
;A4 = -100 bis +100
;A5 = -60 bis +60
;A6 = -100 bis +100
;-----------------------------

; Pendelpunkt erreicht
; Reached pendulum-point
;FOLD PTP PendulumPoint Vel=100 % PDAT7 CD;%{PE}%R 8.2.17,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:PendulumPoint, 3:, 5:100, 7:PDAT7
$BWDSTART=FALSE
PDAT_ACT=PPDAT7
FDAT_ACT=FPendulumPoint
BAS(#PTP_PARAMS,100)
TQM_FIFO_READ(TM4)
TRIGGER WHEN DISTANCE=0 DELAY=0 DO iTQM_TRIGGERID=4
TRIGGER WHEN DISTANCE=0 DELAY=0 DO TQM_START_MON(TM4) PRIO = -1
TRIGGER WHEN DISTANCE=1 DELAY=0 DO TQM_SWAP_VALUES(TM4) PRIO = -1
PTP XPendulumPoint 
;ENDFOLD

MSG_SHOW("DAI_H_Prog",#quit,999,"dai_ldd_1")
HALT

; Teach PTP-way back to home
; Teache Weg zurueck zu Home
;FOLD PTP LHP020 Vel=100 % PDAT020 Tool[0] Base[0] CD;%{PE}%R 8.2.17,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:LHP020, 3:, 5:100, 7:PDAT020
$BWDSTART=FALSE
PDAT_ACT=PPDAT020
FDAT_ACT=FLHP020
BAS(#PTP_PARAMS,100)
TQM_FIFO_READ(TM5)
TRIGGER WHEN DISTANCE=0 DELAY=0 DO iTQM_TRIGGERID=5
TRIGGER WHEN DISTANCE=0 DELAY=0 DO TQM_START_MON(TM5) PRIO = -1
TRIGGER WHEN DISTANCE=1 DELAY=0 DO TQM_SWAP_VALUES(TM5) PRIO = -1
PTP XLHP020 
;ENDFOLD

;FOLD PTP LHP025 Vel=100 % PDAT025 Tool[0] Base[0] CD;%{PE}%R 8.2.17,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:LHP025, 3:, 5:100, 7:PDAT025
$BWDSTART=FALSE
PDAT_ACT=PPDAT025
FDAT_ACT=FLHP025
BAS(#PTP_PARAMS,100)
TQM_FIFO_READ(TM6)
TRIGGER WHEN DISTANCE=0 DELAY=0 DO iTQM_TRIGGERID=6
TRIGGER WHEN DISTANCE=0 DELAY=0 DO TQM_START_MON(TM6) PRIO = -1
TRIGGER WHEN DISTANCE=1 DELAY=0 DO TQM_SWAP_VALUES(TM6) PRIO = -1
PTP XLHP025 
;ENDFOLD

;FOLD PTP LHP030 Vel=100 % PDAT030 Tool[0] Base[0] CD;%{PE}%R 8.2.17,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:LHP030, 3:, 5:100, 7:PDAT030
$BWDSTART=FALSE
PDAT_ACT=PPDAT030
FDAT_ACT=FLHP030
BAS(#PTP_PARAMS,100)
TQM_FIFO_READ(TM7)
TRIGGER WHEN DISTANCE=0 DELAY=0 DO iTQM_TRIGGERID=7
TRIGGER WHEN DISTANCE=0 DELAY=0 DO TQM_START_MON(TM7) PRIO = -1
TRIGGER WHEN DISTANCE=1 DELAY=0 DO TQM_SWAP_VALUES(TM7) PRIO = -1
PTP XLHP030 
;ENDFOLD

;FOLD PTP HOME Vel=100 % DEFAULT;%{PE}%R 5.5.24,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:DEFAULT
$BWDSTART=FALSE
PDAT_ACT=PDEFAULT
FDAT_ACT=FHOME
BAS(#PTP_PARAMS,100)
$H_POS=XHOME
PTP XHOME 
;ENDFOLD

END